{"remainingRequest":"/home/bhagyashreebhoyer/small-curd-application-vuetify/VueJS-learning-curve-with-vuetify/node_modules/babel-loader/lib/index.js!/home/bhagyashreebhoyer/small-curd-application-vuetify/VueJS-learning-curve-with-vuetify/node_modules/vuetify-loader/lib/loader.js??ref--18-0!/home/bhagyashreebhoyer/small-curd-application-vuetify/VueJS-learning-curve-with-vuetify/node_modules/cache-loader/dist/cjs.js??ref--0-0!/home/bhagyashreebhoyer/small-curd-application-vuetify/VueJS-learning-curve-with-vuetify/node_modules/vue-loader/lib/index.js??vue-loader-options!/home/bhagyashreebhoyer/small-curd-application-vuetify/VueJS-learning-curve-with-vuetify/src/components/Update.vue?vue&type=script&lang=js&","dependencies":[{"path":"/home/bhagyashreebhoyer/small-curd-application-vuetify/VueJS-learning-curve-with-vuetify/src/components/Update.vue","mtime":1583332133684},{"path":"/home/bhagyashreebhoyer/small-curd-application-vuetify/VueJS-learning-curve-with-vuetify/node_modules/cache-loader/dist/cjs.js","mtime":1582811458839},{"path":"/home/bhagyashreebhoyer/small-curd-application-vuetify/VueJS-learning-curve-with-vuetify/node_modules/babel-loader/lib/index.js","mtime":1582811458975},{"path":"/home/bhagyashreebhoyer/small-curd-application-vuetify/VueJS-learning-curve-with-vuetify/node_modules/vuetify-loader/lib/loader.js","mtime":1582811484202},{"path":"/home/bhagyashreebhoyer/small-curd-application-vuetify/VueJS-learning-curve-with-vuetify/node_modules/cache-loader/dist/cjs.js","mtime":1582811458839},{"path":"/home/bhagyashreebhoyer/small-curd-application-vuetify/VueJS-learning-curve-with-vuetify/node_modules/vue-loader/lib/index.js","mtime":1582811476286}],"contextDependencies":[],"result":[{"type":"Buffer","data":"base64:aW1wb3J0ICJjb3JlLWpzL21vZHVsZXMvZXMuZnVuY3Rpb24ubmFtZSI7Ci8vCi8vCi8vCi8vCi8vCi8vCi8vCi8vCi8vCi8vCi8vCi8vCi8vCi8vCi8vCi8vCi8vCi8vCi8vCi8vCi8vCi8vCi8vCi8vCi8vCi8vCi8vCi8vCi8vCi8vCi8vCi8vCi8vCi8vCi8vCi8vCi8vCi8vCi8vCi8vCi8vCi8vCi8vCi8vCi8vCi8vCi8vCi8vCi8vCi8vCi8vCi8vCi8vCi8vCi8vCi8vCi8vCi8vCi8vCi8vCi8vCi8vCi8vCi8vCi8vCi8vCi8vCi8vCi8vCi8vCi8vCi8vCi8vCi8vCi8vCi8vCi8vCi8vCi8vCi8vCgovKiBlc2xpbnQtZGlzYWJsZSBuby11c2VsZXNzLWVzY2FwZSAqLwppbXBvcnQgY2xvbmVEZWVwIGZyb20gJ2xvZGFzaC9jbG9uZURlZXAnOwppbXBvcnQgRm9ybURlbW8gZnJvbSAnLi9Gb3JtRGVtby52dWUnOwpleHBvcnQgZGVmYXVsdCB7CiAgbmFtZTogJ0xpc3QnLAogIGRhdGE6IGZ1bmN0aW9uIGRhdGEoKSB7CiAgICByZXR1cm4gewogICAgICBuYW1lOiAnJywKICAgICAgbmFtZVJ1bGVzOiBbZnVuY3Rpb24gKHZhbHVlKSB7CiAgICAgICAgcmV0dXJuICEhdmFsdWUgfHwgJ05hbWUgaXMgcmVxdWlyZWQnOwogICAgICB9LCBmdW5jdGlvbiAodmFsdWUpIHsKICAgICAgICByZXR1cm4gdmFsdWUgJiYgdmFsdWUubGVuZ3RoIDw9IDIwIHx8ICdOYW1lIG11c3QgYmUgbGVzcyB0aGFuIDIwIGNoYXJhY3RlcnMnOwogICAgICB9LCBmdW5jdGlvbiAodmFsdWUpIHsKICAgICAgICByZXR1cm4gL15bYS16QS1aXHNcLl0rJC8udGVzdCh2YWx1ZSkgfHwgJ05hbWUgY2FuIGhhdmUgb25seSBjaGFyYWN0ZXJzJzsKICAgICAgfV0sCiAgICAgIGVtYWlsOiAnJywKICAgICAgZW1haWxSdWxlczogW2Z1bmN0aW9uICh2YWx1ZSkgewogICAgICAgIHJldHVybiAhIXZhbHVlIHx8ICdFLW1haWwgaXMgcmVxdWlyZWQnOwogICAgICB9LCBmdW5jdGlvbiAodmFsdWUpIHsKICAgICAgICByZXR1cm4gLy4rQC4rXC4uKy8udGVzdCh2YWx1ZSkgfHwgJ0UtbWFpbCBtdXN0IGJlIHZhbGlkJzsKICAgICAgfV0sCiAgICAgIHZhbGlkOiB0cnVlLAogICAgICBzdWJtaXR0ZWQ6IGZhbHNlLAogICAgICB1cGRhdGU6IGZhbHNlLAogICAgICB1cGRhdGVJbmRleDogbnVsbCwKICAgICAgcHJldmVvdXNFbnRyeXM6IFtdCiAgICB9OwogIH0sCiAgY29tcG9uZW50czogewogICAgRm9ybURlbW86IEZvcm1EZW1vCiAgfSwKICBjb21wdXRlZDogewogICAgLyoqCiAgICAgICogQ29tcHV0ZWQgdGhlIGVudHJ5cyBmb3Igc3RvcmUgCiAgICAgICogQHJldHVybnthcnJheX0gZW50cnlzCiAgICAgICovCiAgICBlbnRyeXM6IGZ1bmN0aW9uIGVudHJ5cygpIHsKICAgICAgcmV0dXJuIHRoaXMuJHN0b3JlLnN0YXRlLmVudHJ5czsKICAgIH0KICB9LAogIG1ldGhvZHM6IHsKICAgIC8qKgogICAgICAqIFNldCB0aGUgZW50cnkgZmllbGQgdmFsdWUsIGluZGV4IG9mIHVwZGF0ZSBlbnRyeSBhbmQgdXBkYXRlIGZsYWcgaW4gZGF0YSB3aGVuIGNsaWNrIG9uIHVwZGF0ZSBidXR0b24KICAgICAgKiBAcGFyYW17bmFtZX0gZm9ybSBzZWxlY3RlZCBlbnRyeSBuYW1lIHZhbHVlCiAgICAgICogQHBhcmFte2VtYWlsfSBmb3JtIHNlbGVjdGVkIGVudHJ5IGVtYWlsIHZhbHVlCiAgICAgICogQHBhcmFte2luZGV4fSBmb3JtIHNlbGVjdGVkIGVudHJ5IGluZGV4IHZhbHVlCiAgICAgICovCiAgICB1cGRhdGVFbnRyeTogZnVuY3Rpb24gdXBkYXRlRW50cnkobmFtZSwgZW1haWwsIGluZGV4KSB7CiAgICAgIHRoaXMubmFtZSA9IG5hbWU7CiAgICAgIHRoaXMuZW1haWwgPSBlbWFpbDsKICAgICAgdGhpcy51cGRhdGVJbmRleCA9IGluZGV4OwogICAgICB0aGlzLnVwZGF0ZSA9IHRydWU7CiAgICAgIHRoaXMuc3VibWl0dGVkID0gZmFsc2U7CiAgICB9LAoKICAgIC8qKgogICAgKiBTZXQgdGhlIHVwZGF0ZWQgZW50cnkgdmFsdWUgaW50byBzdG9yZSwKICAgICogc2V0IHRoZSBzdWJtaXR0ZWQgZmxhZyBhbmQgcmVzZXQgdGhlIGZvcm0gd2hlbiBmb3JtIGlzIHZhbGlkYXRlLgogICAgKiBAcGFyYW17bmFtZX0gZm9ybSBuYW1lIGlucHV0IGZpZWxkIHZhbHVlCiAgICAqIEBwYXJhbXtlbWFpbH0gZm9ybSBlbWFpbCBpbnB1dCBmaWVsZCB2YWx1ZQogICAgKiBAcGFyYW17dmFsaWR9IGZvcm0gZGF0YSB2YWxpZGF0aW9uIGZsYWcKICAgICovCiAgICB1cGRhdGVFbnR0cnlWYWx1ZXM6IGZ1bmN0aW9uIHVwZGF0ZUVudHRyeVZhbHVlcyhuYW1lLCBlbWFpbCwgdmFsaWQpIHsKICAgICAgdGhpcy5uYW1lID0gbmFtZTsKICAgICAgdGhpcy5lbWFpbCA9IGVtYWlsOwogICAgICB0aGlzLnZhbGlkID0gdmFsaWQ7CgogICAgICBpZiAodGhpcy52YWxpZCAmJiB0aGlzLm5hbWUgJiYgdGhpcy5lbWFpbCkgewogICAgICAgIHRoaXMucHJldmVvdXNFbnRyeXMgPSBjbG9uZURlZXAodGhpcy4kc3RvcmUuc3RhdGUuZW50cnlzKTsKICAgICAgICB0aGlzLnByZXZlb3VzRW50cnlzW3RoaXMudXBkYXRlSW5kZXhdLm5hbWUgPSB0aGlzLm5hbWU7CiAgICAgICAgdGhpcy5wcmV2ZW91c0VudHJ5c1t0aGlzLnVwZGF0ZUluZGV4XS5lbWFpbCA9IHRoaXMuZW1haWw7CiAgICAgICAgdGhpcy4kc3RvcmUuZGlzcGF0Y2goJ3VwZGF0ZUVudHRyeXMnLCB0aGlzLnByZXZlb3VzRW50cnlzKTsKICAgICAgICB0aGlzLnN1Ym1pdHRlZCA9IHRydWU7CiAgICAgIH0KICAgIH0sCgogICAgLyoqCiAgICAgICogUmVzZXQgc3VibWl0dGVkIGZsYWcsIHVwZGF0ZSBmbGFnLCB1cGRhdGVJbmRleCwgYW5kIHByZXZlb3VzRW50cnlzLgogICAgICAqLwogICAgdG9nZ2xlU3VibWl0ZWQ6IGZ1bmN0aW9uIHRvZ2dsZVN1Ym1pdGVkKCkgewogICAgICB0aGlzLnN1Ym1pdHRlZCA9IGZhbHNlOwogICAgICB0aGlzLnVwZGF0ZSA9IGZhbHNlOwogICAgICB0aGlzLnVwZGF0ZUluZGV4ID0gbnVsbDsKICAgICAgdGhpcy5wcmV2ZW91c0VudHJ5cyA9IFtdOwogICAgfSwKCiAgICAvKioKICAgICAgKiBSZXNldCBmb3JtCiAgICAgICogQHBhcmFte2Zyb21SZWZzfSBmb3JtIHJlZnMKICAgICAgKi8KICAgIGNsZWFyOiBmdW5jdGlvbiBjbGVhcihmcm9tUmVmcykgewogICAgICBmcm9tUmVmcy5mb3Jtcy5yZXNldCgpOwogICAgICB0aGlzLm5hbWUgPSAnJzsKICAgICAgdGhpcy5lbWFpbCA9ICcnOwogICAgfQogIH0KfTs="},{"version":3,"sources":["Update.vue"],"names":[],"mappings":";;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;AAkFA;AACA,OAAA,SAAA,MAAA,kBAAA;AACA,OAAA,QAAA,MAAA,gBAAA;AAEA,eAAA;AACA,EAAA,IAAA,EAAA,MADA;AAEA,EAAA,IAAA,EAAA;AAAA,WAAA;AACA,MAAA,IAAA,EAAA,EADA;AAEA,MAAA,SAAA,EAAA,CACA,UAAA,KAAA;AAAA,eAAA,CAAA,CAAA,KAAA,IAAA,kBAAA;AAAA,OADA,EAEA,UAAA,KAAA;AAAA,eAAA,KAAA,IAAA,KAAA,CAAA,MAAA,IAAA,EAAA,IAAA,sCAAA;AAAA,OAFA,EAGA,UAAA,KAAA;AAAA,eAAA,kBAAA,IAAA,CAAA,KAAA,KAAA,+BAAA;AAAA,OAHA,CAFA;AAOA,MAAA,KAAA,EAAA,EAPA;AAQA,MAAA,UAAA,EAAA,CACA,UAAA,KAAA;AAAA,eAAA,CAAA,CAAA,KAAA,IAAA,oBAAA;AAAA,OADA,EAEA,UAAA,KAAA;AAAA,eAAA,YAAA,IAAA,CAAA,KAAA,KAAA,sBAAA;AAAA,OAFA,CARA;AAYA,MAAA,KAAA,EAAA,IAZA;AAaA,MAAA,SAAA,EAAA,KAbA;AAcA,MAAA,MAAA,EAAA,KAdA;AAeA,MAAA,WAAA,EAAA,IAfA;AAgBA,MAAA,cAAA,EAAA;AAhBA,KAAA;AAAA,GAFA;AAoBA,EAAA,UAAA,EAAA;AACA,IAAA,QAAA,EAAA;AADA,GApBA;AAuBA,EAAA,QAAA,EAAA;AACA;;;;AAIA,IAAA,MALA,oBAKA;AACA,aAAA,KAAA,MAAA,CAAA,KAAA,CAAA,MAAA;AACA;AAPA,GAvBA;AAgCA,EAAA,OAAA,EAAA;AACA;;;;;;AAMA,IAAA,WAPA,uBAOA,IAPA,EAOA,KAPA,EAOA,KAPA,EAOA;AACA,WAAA,IAAA,GAAA,IAAA;AACA,WAAA,KAAA,GAAA,KAAA;AACA,WAAA,WAAA,GAAA,KAAA;AACA,WAAA,MAAA,GAAA,IAAA;AACA,WAAA,SAAA,GAAA,KAAA;AACA,KAbA;;AAcA;;;;;;;AAOA,IAAA,kBArBA,8BAqBA,IArBA,EAqBA,KArBA,EAqBA,KArBA,EAqBA;AACA,WAAA,IAAA,GAAA,IAAA;AACA,WAAA,KAAA,GAAA,KAAA;AACA,WAAA,KAAA,GAAA,KAAA;;AACA,UAAA,KAAA,KAAA,IAAA,KAAA,IAAA,IAAA,KAAA,KAAA,EAAA;AACA,aAAA,cAAA,GAAA,SAAA,CAAA,KAAA,MAAA,CAAA,KAAA,CAAA,MAAA,CAAA;AACA,aAAA,cAAA,CAAA,KAAA,WAAA,EAAA,IAAA,GAAA,KAAA,IAAA;AACA,aAAA,cAAA,CAAA,KAAA,WAAA,EAAA,KAAA,GAAA,KAAA,KAAA;AACA,aAAA,MAAA,CAAA,QAAA,CAAA,eAAA,EAAA,KAAA,cAAA;AACA,aAAA,SAAA,GAAA,IAAA;AACA;AACA,KAhCA;;AAiCA;;;AAGA,IAAA,cApCA,4BAoCA;AACA,WAAA,SAAA,GAAA,KAAA;AACA,WAAA,MAAA,GAAA,KAAA;AACA,WAAA,WAAA,GAAA,IAAA;AACA,WAAA,cAAA,GAAA,EAAA;AACA,KAzCA;;AA0CA;;;;AAIA,IAAA,KA9CA,iBA8CA,QA9CA,EA8CA;AACA,MAAA,QAAA,CAAA,KAAA,CAAA,KAAA;AACA,WAAA,IAAA,GAAA,EAAA;AACA,WAAA,KAAA,GAAA,EAAA;AACA;AAlDA;AAhCA,CAAA","sourcesContent":["<template>\n  <v-card>\n    <v-list flat  id=\"entry-list\">\n      <v-subheader class=\"sub-header\">\n        Update\n      </v-subheader>\n      <v-list-item-group\n        color=\"primary\"\n        class=\"list\"\n      >\n        <v-list-item\n          class=\"list-item\"\n          v-for=\"(entry, index) in entrys\"\n          :key=\"index\"\n        >\n          <div class=\"items-wrapper\" v-if=\"!(updateIndex == index)\">\n            <v-list-item-icon>\n              <v-btn\n                title=\"Update\"\n                min-width=\"20px\"\n                width=\"20px\"\n                height=\"25px\"\n                color=\"success\"\n                @click=\"updateEntry(entry.name, entry.email, index)\"\n              >\n                <v-icon>\n                  mdi-account-circle\n                </v-icon>\n              </v-btn>  \n            </v-list-item-icon>\n            <v-list-item-content>\n              <v-list-item-title>\n                Name: {{ entry.name }},  Email: {{ entry.email }}\n              </v-list-item-title>\n            </v-list-item-content>\n          </div>\n          <div v-if=\"update && (updateIndex == index)\">\n            <FormDemo\n             :name=name\n             :valid=valid\n             FormRef=\"forms\"\n             :submitted=submitted\n             :submit=\"updateEnttryValues\"\n             :nameRules=nameRules\n             :counter=\"20\"\n             :nameRequired=\"true\"\n             :email=email\n             :emailRequired=\"true\"\n             :emailRules=emailRules\n             :clear=\"clear\"\n            />\n            \n            <v-alert\n              v-model=\"submitted\"\n              dense\n              text\n              icon=\"mdi-check\"\n              type=\"success\"\n              elevation=\"2\"\n            >\n              Added entry successfully!\n              <v-btn\n                min-width=\"20px\"\n                color=\"success\"\n                width=\"20px\"\n                height=\"25px\"\n                v-on:click=\"toggleSubmited\"\n              >\n                <v-icon >\n                  mdi-close-circle\n                </v-icon>\n              </v-btn>\n            </v-alert>\n          </div>\n        </v-list-item>\n      </v-list-item-group>\n    </v-list>\n  </v-card>\n</template>\n\n<script>\n\n  /* eslint-disable no-useless-escape */\n  import cloneDeep from 'lodash/cloneDeep';\n  import FormDemo from './FormDemo.vue';\n    \n  export default {\n    name: 'List',\n    data: () => ({\n      name: '',\n      nameRules: [\n      value => !!value || 'Name is required',\n      value => (value && value.length <= 20) || 'Name must be less than 20 characters',\n      value => /^[a-zA-Z\\s\\.]+$/.test(value) || 'Name can have only characters',\n    ],\n      email: '',\n      emailRules: [\n      value => !!value || 'E-mail is required',\n      value => /.+@.+\\..+/.test(value) || 'E-mail must be valid',\n    ],\n      valid: true,\n      submitted: false,\n      update: false,\n      updateIndex: null,\n      preveousEntrys: [],\n    }),\n    components: {\n      FormDemo,\n    },\n    computed: {\n      /**\n        * Computed the entrys for store \n        * @return{array} entrys\n        */\n      entrys(){\n        return this.$store.state.entrys\n      },\n    },\n    methods: {\n       /**\n         * Set the entry field value, index of update entry and update flag in data when click on update button\n         * @param{name} form selected entry name value\n         * @param{email} form selected entry email value\n         * @param{index} form selected entry index value\n         */\n      updateEntry (name, email, index) {\n        this.name= name;\n        this.email= email;\n        this.updateIndex= index;\n        this.update= true;\n        this.submitted= false;\n      },\n         /**\n         * Set the updated entry value into store,\n         * set the submitted flag and reset the form when form is validate.\n         * @param{name} form name input field value\n         * @param{email} form email input field value\n         * @param{valid} form data validation flag\n         */\n      updateEnttryValues (name, email, valid) {\n        this.name= name;\n        this.email= email;\n        this.valid= valid;\n        if(this.valid && this.name && this.email) {\n          this.preveousEntrys = cloneDeep(this.$store.state.entrys);\n          this.preveousEntrys[this.updateIndex].name= this.name;\n          this.preveousEntrys[this.updateIndex].email= this.email;\n          this.$store.dispatch('updateEnttrys', this.preveousEntrys);  \n          this.submitted= true;\n        }\n      },\n       /**\n         * Reset submitted flag, update flag, updateIndex, and preveousEntrys.\n         */\n      toggleSubmited () {\n        this.submitted= false;\n        this.update= false;\n        this.updateIndex= null;\n        this.preveousEntrys= [];\n      },\n      /**\n        * Reset form\n        * @param{fromRefs} form refs\n        */\n      clear (fromRefs) {\n        fromRefs.forms.reset();\n        this.name= '';\n        this.email= '';\n      },\n    },\n  }\n\n</script>\n\n"],"sourceRoot":"src/components"}]}