{"remainingRequest":"/home/bhagyashreebhoyer/small-curd-application-vuetify/VueJS-learning-curve-with-vuetify/node_modules/thread-loader/dist/cjs.js!/home/bhagyashreebhoyer/small-curd-application-vuetify/VueJS-learning-curve-with-vuetify/node_modules/babel-loader/lib/index.js!/home/bhagyashreebhoyer/small-curd-application-vuetify/VueJS-learning-curve-with-vuetify/node_modules/vuetify-loader/lib/loader.js??ref--18-0!/home/bhagyashreebhoyer/small-curd-application-vuetify/VueJS-learning-curve-with-vuetify/node_modules/cache-loader/dist/cjs.js??ref--0-0!/home/bhagyashreebhoyer/small-curd-application-vuetify/VueJS-learning-curve-with-vuetify/node_modules/vue-loader/lib/index.js??vue-loader-options!/home/bhagyashreebhoyer/small-curd-application-vuetify/VueJS-learning-curve-with-vuetify/src/components/Update.vue?vue&type=script&lang=js&","dependencies":[{"path":"/home/bhagyashreebhoyer/small-curd-application-vuetify/VueJS-learning-curve-with-vuetify/src/components/Update.vue","mtime":1582796638619},{"path":"/home/bhagyashreebhoyer/small-curd-application-vuetify/VueJS-learning-curve-with-vuetify/node_modules/cache-loader/dist/cjs.js","mtime":499162500000},{"path":"/home/bhagyashreebhoyer/small-curd-application-vuetify/VueJS-learning-curve-with-vuetify/node_modules/thread-loader/dist/cjs.js","mtime":499162500000},{"path":"/home/bhagyashreebhoyer/small-curd-application-vuetify/VueJS-learning-curve-with-vuetify/node_modules/babel-loader/lib/index.js","mtime":499162500000},{"path":"/home/bhagyashreebhoyer/small-curd-application-vuetify/VueJS-learning-curve-with-vuetify/node_modules/vuetify-loader/lib/loader.js","mtime":1574476662000},{"path":"/home/bhagyashreebhoyer/small-curd-application-vuetify/VueJS-learning-curve-with-vuetify/node_modules/cache-loader/dist/cjs.js","mtime":499162500000},{"path":"/home/bhagyashreebhoyer/small-curd-application-vuetify/VueJS-learning-curve-with-vuetify/node_modules/vue-loader/lib/index.js","mtime":499162500000}],"contextDependencies":[],"result":[{"type":"Buffer","data":"base64:aW1wb3J0ICJjb3JlLWpzL21vZHVsZXMvZXMuYXJyYXkuZm9yLWVhY2giOwppbXBvcnQgImNvcmUtanMvbW9kdWxlcy9lcy5mdW5jdGlvbi5uYW1lIjsKaW1wb3J0ICJjb3JlLWpzL21vZHVsZXMvd2ViLmRvbS1jb2xsZWN0aW9ucy5mb3ItZWFjaCI7Ci8vCi8vCi8vCi8vCi8vCi8vCi8vCi8vCi8vCi8vCi8vCi8vCi8vCi8vCi8vCi8vCi8vCi8vCi8vCi8vCi8vCi8vCi8vCi8vCi8vCi8vCi8vCi8vCi8vCi8vCi8vCi8vCi8vCi8vCi8vCi8vCi8vCi8vCi8vCi8vCi8vCi8vCi8vCi8vCi8vCi8vCi8vCi8vCi8vCi8vCi8vCi8vCi8vCi8vCi8vCi8vCi8vCi8vCi8vCi8vCi8vCi8vCi8vCi8vCi8vCi8vCi8vCi8vCi8vCi8vCi8vCi8vCi8vCi8vCi8vCi8vCi8vCi8vCi8vCi8vCi8vCi8vCi8vCi8vCi8vCi8vCi8vCi8vCi8vCi8vCi8vCi8vCi8vCi8vCi8vCi8vCi8vCi8vCi8vCi8vCi8vCi8vCi8vCi8vCgovKiBlc2xpbnQtZGlzYWJsZSBuby11c2VsZXNzLWVzY2FwZSAqLwppbXBvcnQgY2xvbmVEZWVwIGZyb20gJ2xvZGFzaC9jbG9uZURlZXAnOwppbXBvcnQgeyB2YWxpZGF0aW9uTWl4aW4gfSBmcm9tICd2dWVsaWRhdGUnOwppbXBvcnQgeyByZXF1aXJlZCwgbWF4TGVuZ3RoLCBlbWFpbCB9IGZyb20gJ3Z1ZWxpZGF0ZS9saWIvdmFsaWRhdG9ycyc7CmV4cG9ydCBkZWZhdWx0IHsKICBtaXhpbnM6IFt2YWxpZGF0aW9uTWl4aW5dLAogIHZhbGlkYXRpb25zOiB7CiAgICBuYW1lOiB7CiAgICAgIHJlcXVpcmVkOiByZXF1aXJlZCwKICAgICAgbWF4TGVuZ3RoOiBtYXhMZW5ndGgoMjApCiAgICB9LAogICAgZW1haWw6IHsKICAgICAgcmVxdWlyZWQ6IHJlcXVpcmVkLAogICAgICBlbWFpbDogZW1haWwKICAgIH0KICB9LAogIG5hbWU6ICdMaXN0JywKICBkYXRhOiBmdW5jdGlvbiBkYXRhKCkgewogICAgcmV0dXJuIHsKICAgICAgbmFtZTogJycsCiAgICAgIGVtYWlsOiAnJywKICAgICAgdmFsaWQ6IGZhbHNlLAogICAgICBzdWJtaXR0ZWQ6IGZhbHNlLAogICAgICB1cGRhdGU6IGZhbHNlLAogICAgICB1cGRhdGVJbmRleDogbnVsbCwKICAgICAgcHJldmVvdXNFbnRyeXM6IFtdCiAgICB9OwogIH0sCiAgY29tcHV0ZWQ6IHsKICAgIGVudHJ5czogZnVuY3Rpb24gZW50cnlzKCkgewogICAgICByZXR1cm4gdGhpcy4kc3RvcmUuc3RhdGUuZW50cnlzOwogICAgfSwKICAgIG5hbWVFcnJvcnM6IGZ1bmN0aW9uIG5hbWVFcnJvcnMoKSB7CiAgICAgIHZhciBlcnJvcnMgPSBbXTsKICAgICAgdmFyIG5hbWVSZWdFeHAgPSAvXlthLXpBLVpcc1wuXSskLzsKICAgICAgaWYgKCF0aGlzLiR2Lm5hbWUuJGRpcnR5KSByZXR1cm4gZXJyb3JzOwogICAgICAhdGhpcy4kdi5uYW1lLm1heExlbmd0aCAmJiBlcnJvcnMucHVzaCgnTmFtZSBtdXN0IGJlIGF0IG1vc3QgMjAgY2hhcmFjdGVycyBsb25nJyk7CiAgICAgICF0aGlzLiR2Lm5hbWUucmVxdWlyZWQgJiYgZXJyb3JzLnB1c2goJ05hbWUgaXMgcmVxdWlyZWQuJyk7CiAgICAgICFuYW1lUmVnRXhwLnRlc3QodGhpcy5uYW1lKSAmJiBlcnJvcnMucHVzaCgnTmFtZSBjYW4gaGF2ZSBvbmx5IGNoYXJhY3RlcnMnKTsKICAgICAgcmV0dXJuIGVycm9yczsKICAgIH0sCiAgICBlbWFpbEVycm9yczogZnVuY3Rpb24gZW1haWxFcnJvcnMoKSB7CiAgICAgIHZhciBfdGhpcyA9IHRoaXM7CgogICAgICB2YXIgZXJyb3JzID0gW107CiAgICAgIGlmICghdGhpcy4kdi5lbWFpbC4kZGlydHkpIHJldHVybiBlcnJvcnM7CiAgICAgIHRoaXMuJHN0b3JlLnN0YXRlLmVudHJ5cy5mb3JFYWNoKGZ1bmN0aW9uIChlbnRyeSwgaW5kZXgpIHsKICAgICAgICBpZiAoZW50cnkuZW1haWwgPT0gX3RoaXMuZW1haWwgJiYgaW5kZXggIT09IF90aGlzLnVwZGF0ZUluZGV4KSBlcnJvcnMucHVzaCgnVGhpcyBlbWFpbCBhbHJlYWR5IGV4aXN0cycpOwogICAgICB9KTsKICAgICAgIXRoaXMuJHYuZW1haWwuZW1haWwgJiYgZXJyb3JzLnB1c2goJ011c3QgYmUgdmFsaWQgZS1tYWlsJyk7CiAgICAgICF0aGlzLiR2LmVtYWlsLnJlcXVpcmVkICYmIGVycm9ycy5wdXNoKCdFLW1haWwgaXMgcmVxdWlyZWQnKTsKICAgICAgcmV0dXJuIGVycm9yczsKICAgIH0KICB9LAogIG1ldGhvZHM6IHsKICAgIHVwZGF0ZUVudHJ5OiBmdW5jdGlvbiB1cGRhdGVFbnRyeShuYW1lLCBlbWFpbCwgaW5kZXgpIHsKICAgICAgdGhpcy5uYW1lID0gbmFtZTsKICAgICAgdGhpcy5lbWFpbCA9IGVtYWlsOwogICAgICB0aGlzLnVwZGF0ZUluZGV4ID0gaW5kZXg7CiAgICAgIHRoaXMudXBkYXRlID0gdHJ1ZTsKICAgIH0sCiAgICB1cGRhdGVFbnR0cnlWYWx1ZXM6IGZ1bmN0aW9uIHVwZGF0ZUVudHRyeVZhbHVlcygpIHsKICAgICAgdGhpcy4kdi4kdG91Y2goKTsKCiAgICAgIGlmICh0aGlzLnZhbGlkICYmIHRoaXMubmFtZSAmJiB0aGlzLmVtYWlsKSB7CiAgICAgICAgdGhpcy5wcmV2ZW91c0VudHJ5cyA9IGNsb25lRGVlcCh0aGlzLiRzdG9yZS5zdGF0ZS5lbnRyeXMpOwogICAgICAgIHRoaXMucHJldmVvdXNFbnRyeXNbdGhpcy51cGRhdGVJbmRleF0ubmFtZSA9IHRoaXMubmFtZTsKICAgICAgICB0aGlzLnByZXZlb3VzRW50cnlzW3RoaXMudXBkYXRlSW5kZXhdLmVtYWlsID0gdGhpcy5lbWFpbDsKICAgICAgICB0aGlzLiRzdG9yZS5kaXNwYXRjaCgndXBkYXRlRW50dHJ5cycsIHRoaXMucHJldmVvdXNFbnRyeXMpOwogICAgICAgIHRoaXMuc3VibWl0dGVkID0gdHJ1ZTsKICAgICAgICB0aGlzLmNsZWFyKCk7CiAgICAgIH0KICAgIH0sCiAgICB0b2dnbGVTdWJtaXRlZDogZnVuY3Rpb24gdG9nZ2xlU3VibWl0ZWQoKSB7CiAgICAgIHRoaXMuc3VibWl0dGVkID0gZmFsc2U7CiAgICAgIHRoaXMudXBkYXRlID0gZmFsc2U7CiAgICAgIHRoaXMudXBkYXRlSW5kZXggPSBudWxsOwogICAgICB0aGlzLnByZXZlb3VzRW50cnlzID0gW107CiAgICB9LAogICAgY2xlYXI6IGZ1bmN0aW9uIGNsZWFyKCkgewogICAgICB0aGlzLiR2LiRyZXNldCgpOwogICAgICB0aGlzLm5hbWUgPSAnJzsKICAgICAgdGhpcy5lbWFpbCA9ICcnOwogICAgfQogIH0KfTs="},{"version":3,"sources":["Update.vue"],"names":[],"mappings":"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","sourcesContent":["<template>\n  <v-card>\n    <v-list flat  id=\"entry-list\">\n      <v-subheader class=\"sub-header\">\n        Update\n      </v-subheader>\n      <v-list-item-group\n        v-model=\"item\"\n        color=\"primary\"\n        class=\"list\"\n      >\n        <v-list-item\n          class=\"list-item\"\n          v-for=\"(entry, index) in entrys\"\n          :key=\"entry\"\n        >\n          <div class=\"items-wrapper\" v-if=\"!(updateIndex == index)\">\n            <v-list-item-icon>\n              <v-btn\n                title=\"Update\"\n                min-width=\"20px\"\n                width=\"20px\"\n                height=\"25px\"\n                color=\"success\"\n                @click=\"updateEntry(entry.name, entry.email, index)\"\n              >\n                <v-icon>\n                  mdi-account-circle\n                </v-icon>\n              </v-btn>  \n            </v-list-item-icon>\n            <v-list-item-content>\n              <v-list-item-title>\n                Name: {{ entry.name }},  Email: {{ entry.email }}\n              </v-list-item-title>\n            </v-list-item-content>\n          </div>\n          <div v-if=\"update && (updateIndex == index)\">\n            <v-form ref=\"form\"\n              v-model=\"valid\"\n              v-if=\"!submitted\"\n              @submit.prevent=\"updateEnttryValues()\"\n            >\n              <v-text-field\n                v-model=\"name\"\n                :error-messages=\"nameErrors\"\n                :counter=\"20\"\n                label=\"Name\"\n                required\n                @input=\"$v.name.$touch()\"\n                @blur=\"$v.name.$touch()\"\n              >\n              </v-text-field>\n              <v-text-field\n                v-model=\"email\"\n                :error-messages=\"emailErrors\"\n                label=\"E-mail\"\n                required\n                @input=\"$v.email.$touch()\"\n                @blur=\"$v.email.$touch()\"\n              >\n              </v-text-field>\n              <v-btn\n                class=\"mr-4\"\n                type=\"submit\"\n                color=\"success\"\n              >\n                submit\n              </v-btn>\n              <v-btn\n                @click=\"clear\"\n                color=\"warning\"\n              >\n                clear\n              </v-btn>\n            </v-form>\n            <v-alert\n              v-model=\"submitted\"\n              dense\n              text\n              icon=\"mdi-check\"\n              type=\"success\"\n              elevation=\"2\"\n            >\n              Added entry successfully!\n              <v-btn\n                min-width=\"20px\"\n                color=\"success\"\n                width=\"20px\"\n                height=\"25px\"\n                v-on:click=\"toggleSubmited\"\n              >\n                <v-icon >\n                  mdi-close-circle\n                </v-icon>\n              </v-btn>\n            </v-alert>\n          </div>\n        </v-list-item>\n      </v-list-item-group>\n    </v-list>\n  </v-card>\n</template>\n\n<script>\n\n  /* eslint-disable no-useless-escape */\n  import cloneDeep from 'lodash/cloneDeep';\n  import { validationMixin } from 'vuelidate'\n  import { required, maxLength, email } from 'vuelidate/lib/validators'\n    \n  export default {\n    mixins: [validationMixin],\n    validations: {\n      name: { required, maxLength: maxLength(20) },\n      email: { required, email },\n    },\n    name: 'List',\n    data: () => ({\n      name: '',\n      email: '',\n      valid: false,\n      submitted: false,\n      update: false,\n      updateIndex: null,\n      preveousEntrys: [],\n    }),\n    computed: {\n      entrys(){\n        return this.$store.state.entrys\n      },\n      nameErrors () {\n        const errors = [];\n        const nameRegExp = /^[a-zA-Z\\s\\.]+$/;\n        if (!this.$v.name.$dirty) return errors\n        !this.$v.name.maxLength && errors.push('Name must be at most 20 characters long')\n        !this.$v.name.required && errors.push('Name is required.')\n        !nameRegExp.test(this.name) && errors.push('Name can have only characters')\n        return errors\n      },\n      emailErrors () {\n        const errors = [];\n      \n        if (!this.$v.email.$dirty) return errors \n        this.$store.state.entrys.forEach((entry, index) => {\n        if (entry.email == this.email && index !== this.updateIndex) errors.push('This email already exists');\n         });\n        !this.$v.email.email && errors.push('Must be valid e-mail')\n        !this.$v.email.required && errors.push('E-mail is required')\n        return errors\n      },\n    },\n    methods: {\n      updateEntry: function(name, email, index) {\n        this.name= name;\n        this.email= email;\n        this.updateIndex= index;\n        this.update= true;\n      },\n        \n      updateEnttryValues: function () {\n        this.$v.$touch()\n        if(this.valid && this.name && this.email) {\n          this.preveousEntrys = cloneDeep(this.$store.state.entrys);\n          this.preveousEntrys[this.updateIndex].name= this.name;\n          this.preveousEntrys[this.updateIndex].email= this.email;\n          this.$store.dispatch('updateEnttrys', this.preveousEntrys);  \n          this.submitted= true;\n          this.clear();\n        }\n      },\n      toggleSubmited: function () {\n        this.submitted= false;\n        this.update= false;\n        this.updateIndex= null;\n        this.preveousEntrys= [];\n      },\n      clear () {\n        this.$v.$reset()\n        this.name = ''\n        this.email = ''\n      },\n    },\n  }\n\n</script>\n\n<style scoped>\n  #entry-list {\n    background: #e8e0b4;\n    box-shadow: 1px 2px 3px rgba(0,0,0,0.2);\n    padding: 15px 25px;\n  }\n  .list {\n    padding: 0;\n  }\n  .list-item {\n    margin-right: 10px;\n    margin-top: 10px;\n    padding: 10px;\n    background: rgba(255,255,255,0.7);\n  }\n  .sub-header {\n    font-size: 25px;\n    padding: 0;\n  }\n  .items-wrapper {\n    display: flex;\n    overflow: hidden;\n  }\n\n</style>"],"sourceRoot":"src/components"}]}