{"remainingRequest":"/home/bhagyashreebhoyer/small-curd-application-vuetify/VueJS-learning-curve-with-vuetify/node_modules/vue-loader/lib/index.js??vue-loader-options!/home/bhagyashreebhoyer/small-curd-application-vuetify/VueJS-learning-curve-with-vuetify/src/components/Update.vue?vue&type=script&lang=js&","dependencies":[{"path":"/home/bhagyashreebhoyer/small-curd-application-vuetify/VueJS-learning-curve-with-vuetify/src/components/Update.vue","mtime":1582891337116},{"path":"/home/bhagyashreebhoyer/small-curd-application-vuetify/VueJS-learning-curve-with-vuetify/node_modules/babel-loader/lib/index.js","mtime":1582811458975},{"path":"/home/bhagyashreebhoyer/small-curd-application-vuetify/VueJS-learning-curve-with-vuetify/node_modules/vuetify-loader/lib/loader.js","mtime":1582811484202},{"path":"/home/bhagyashreebhoyer/small-curd-application-vuetify/VueJS-learning-curve-with-vuetify/node_modules/cache-loader/dist/cjs.js","mtime":1582811458839},{"path":"/home/bhagyashreebhoyer/small-curd-application-vuetify/VueJS-learning-curve-with-vuetify/node_modules/vue-loader/lib/index.js","mtime":1582811476286}],"contextDependencies":[],"result":[{"type":"Buffer","data":"base64:Ly8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KCgovKiBlc2xpbnQtZGlzYWJsZSBuby11c2VsZXNzLWVzY2FwZSAqLwppbXBvcnQgY2xvbmVEZWVwIGZyb20gJ2xvZGFzaC9jbG9uZURlZXAnOwogIApleHBvcnQgZGVmYXVsdCB7CiAgbmFtZTogJ0xpc3QnLAogIGRhdGE6ICgpID0+ICh7CiAgICBuYW1lOiAnJywKICAgIG5hbWVSdWxlczogWwogICAgdmFsdWUgPT4gISF2YWx1ZSB8fCAnTmFtZSBpcyByZXF1aXJlZCcsCiAgICB2YWx1ZSA9PiAodmFsdWUgJiYgdmFsdWUubGVuZ3RoIDw9IDIwKSB8fCAnTmFtZSBtdXN0IGJlIGxlc3MgdGhhbiAyMCBjaGFyYWN0ZXJzJywKICAgIHZhbHVlID0+IC9eW2EtekEtWlxzXC5dKyQvLnRlc3QodmFsdWUpIHx8ICdOYW1lIGNhbiBoYXZlIG9ubHkgY2hhcmFjdGVycycsCiAgXSwKICAgIGVtYWlsOiAnJywKICAgIGVtYWlsUnVsZXM6IFsKICAgIHZhbHVlID0+ICEhdmFsdWUgfHwgJ0UtbWFpbCBpcyByZXF1aXJlZCcsCiAgICB2YWx1ZSA9PiAvLitALitcLi4rLy50ZXN0KHZhbHVlKSB8fCAnRS1tYWlsIG11c3QgYmUgdmFsaWQnLAogIF0sCiAgICB2YWxpZDogdHJ1ZSwKICAgIHN1Ym1pdHRlZDogZmFsc2UsCiAgICB1cGRhdGU6IGZhbHNlLAogICAgdXBkYXRlSW5kZXg6IG51bGwsCiAgICBwcmV2ZW91c0VudHJ5czogW10sCiAgfSksCiAgY29tcHV0ZWQ6IHsKICAgIC8qKgogICAgICAgKiBDb21wdXRlZCB0aGUgZW50cnlzIGZvciBzdG9yZSAKICAgICAgICogQHJldHVybnthcnJheX0gZW50cnlzCiAgICAgICAqLwogICAgZW50cnlzKCl7CiAgICAgIHJldHVybiB0aGlzLiRzdG9yZS5zdGF0ZS5lbnRyeXMKICAgIH0sCiAgfSwKICBtZXRob2RzOiB7CiAgICAgLyoqCiAgICAgICAqIFNldCB0aGUgZW50cnkgZmllbGQgdmFsdWUsIGluZGV4IG9mIHVwZGF0ZSBlbnRyeSBhbmQgdXBkYXRlIGZsYWcgaW4gZGF0YSB3aGVuIGNsaWNrIG9uIHVwZGF0ZSBidXR0b24KICAgICAgICovCiAgICB1cGRhdGVFbnRyeTogZnVuY3Rpb24obmFtZSwgZW1haWwsIGluZGV4KSB7CiAgICAgIHRoaXMubmFtZT0gbmFtZTsKICAgICAgdGhpcy5lbWFpbD0gZW1haWw7CiAgICAgIHRoaXMudXBkYXRlSW5kZXg9IGluZGV4OwogICAgICB0aGlzLnVwZGF0ZT0gdHJ1ZTsKICAgIH0sCiAgICAgICAvKioKICAgICAgICogU2V0IHRoZSB1cGRhdGVkIGVudHJ5IHZhbHVlIGludG8gc3RvcmUsCiAgICAgICAqIHNldCB0aGUgc3VibWl0dGVkIGZsYWcgYW5kIHJlc2V0IHRoZSBmb3JtIHdoZW4gZm9ybSBpcyB2YWxpZGF0ZS4KICAgICAgICovCiAgICB1cGRhdGVFbnR0cnlWYWx1ZXMgKCkgewogICAgICBpZih0aGlzLnZhbGlkICYmIHRoaXMubmFtZSAmJiB0aGlzLmVtYWlsKSB7CiAgICAgICAgdGhpcy5wcmV2ZW91c0VudHJ5cyA9IGNsb25lRGVlcCh0aGlzLiRzdG9yZS5zdGF0ZS5lbnRyeXMpOwogICAgICAgIHRoaXMucHJldmVvdXNFbnRyeXNbdGhpcy51cGRhdGVJbmRleF0ubmFtZT0gdGhpcy5uYW1lOwogICAgICAgIHRoaXMucHJldmVvdXNFbnRyeXNbdGhpcy51cGRhdGVJbmRleF0uZW1haWw9IHRoaXMuZW1haWw7CiAgICAgICAgdGhpcy4kc3RvcmUuZGlzcGF0Y2goJ3VwZGF0ZUVudHRyeXMnLCB0aGlzLnByZXZlb3VzRW50cnlzKTsgIAogICAgICAgIHRoaXMuc3VibWl0dGVkPSB0cnVlOwogICAgICB9CiAgICB9LAogICAgIC8qKgogICAgICAgKiBSZXNldCBzdWJtaXR0ZWQgZmxhZywgdXBkYXRlIGZsYWcsIHVwZGF0ZUluZGV4LCBhbmQgcHJldmVvdXNFbnRyeXMuCiAgICAgICAqLwogICAgdG9nZ2xlU3VibWl0ZWQ6IGZ1bmN0aW9uICgpIHsKICAgICAgdGhpcy5zdWJtaXR0ZWQ9IGZhbHNlOwogICAgICB0aGlzLnVwZGF0ZT0gZmFsc2U7CiAgICAgIHRoaXMudXBkYXRlSW5kZXg9IG51bGw7CiAgICAgIHRoaXMucHJldmVvdXNFbnRyeXM9IFtdOwogICAgfSwKICAgIC8qKgogICAgICAqIFJlc2V0IGZvcm0KICAgICAgKi8KICAgIGNsZWFyIChuYW1lKSB7CiAgICAgIHRoaXMuJHJlZnNbbmFtZV1bMF0ucmVzZXQoKTsKICAgIH0sCiAgfSwKfQoK"},{"version":3,"sources":["Update.vue"],"names":[],"mappings":";;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;AAuGA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA","file":"Update.vue","sourceRoot":"src/components","sourcesContent":["<template>\n  <v-card>\n    <v-list flat  id=\"entry-list\">\n      <v-subheader class=\"sub-header\">\n        Update\n      </v-subheader>\n      <v-list-item-group\n        color=\"primary\"\n        class=\"list\"\n      >\n        <v-list-item\n          class=\"list-item\"\n          v-for=\"(entry, index) in entrys\"\n          :key=\"index\"\n        >\n          <div class=\"items-wrapper\" v-if=\"!(updateIndex == index)\">\n            <v-list-item-icon>\n              <v-btn\n                title=\"Update\"\n                min-width=\"20px\"\n                width=\"20px\"\n                height=\"25px\"\n                color=\"success\"\n                @click=\"updateEntry(entry.name, entry.email, index)\"\n              >\n                <v-icon>\n                  mdi-account-circle\n                </v-icon>\n              </v-btn>  \n            </v-list-item-icon>\n            <v-list-item-content>\n              <v-list-item-title>\n                Name: {{ entry.name }},  Email: {{ entry.email }}\n              </v-list-item-title>\n            </v-list-item-content>\n          </div>\n          <div v-if=\"update && (updateIndex == index)\">\n            <v-form \n              :ref=\"entry.name\"\n              v-model=\"valid\"\n              v-if=\"!submitted\"\n              @submit.prevent=\"updateEnttryValues()\"\n            >\n              <v-text-field\n                v-model=\"name\"\n                :rules=\"nameRules\"\n                :counter=\"20\"\n                label=\"Name\"\n                required\n              >\n              </v-text-field>\n              <v-text-field\n                v-model=\"email\"\n                :rules=\"emailRules\"\n                label=\"E-mail\"\n                required\n              >\n              </v-text-field>\n              <v-btn\n                class=\"mr-4\"\n                type=\"submit\"\n                color=\"success\"\n              >\n                submit\n              </v-btn>\n              <v-btn\n                @click=\"clear(entry.name)\"\n                color=\"warning\"\n                type=\"button\"\n              >\n                clear\n              </v-btn>\n            </v-form>\n            <v-alert\n              v-model=\"submitted\"\n              dense\n              text\n              icon=\"mdi-check\"\n              type=\"success\"\n              elevation=\"2\"\n            >\n              Added entry successfully!\n              <v-btn\n                min-width=\"20px\"\n                color=\"success\"\n                width=\"20px\"\n                height=\"25px\"\n                v-on:click=\"toggleSubmited\"\n              >\n                <v-icon >\n                  mdi-close-circle\n                </v-icon>\n              </v-btn>\n            </v-alert>\n          </div>\n        </v-list-item>\n      </v-list-item-group>\n    </v-list>\n  </v-card>\n</template>\n\n<script>\n\n  /* eslint-disable no-useless-escape */\n  import cloneDeep from 'lodash/cloneDeep';\n    \n  export default {\n    name: 'List',\n    data: () => ({\n      name: '',\n      nameRules: [\n      value => !!value || 'Name is required',\n      value => (value && value.length <= 20) || 'Name must be less than 20 characters',\n      value => /^[a-zA-Z\\s\\.]+$/.test(value) || 'Name can have only characters',\n    ],\n      email: '',\n      emailRules: [\n      value => !!value || 'E-mail is required',\n      value => /.+@.+\\..+/.test(value) || 'E-mail must be valid',\n    ],\n      valid: true,\n      submitted: false,\n      update: false,\n      updateIndex: null,\n      preveousEntrys: [],\n    }),\n    computed: {\n      /**\n         * Computed the entrys for store \n         * @return{array} entrys\n         */\n      entrys(){\n        return this.$store.state.entrys\n      },\n    },\n    methods: {\n       /**\n         * Set the entry field value, index of update entry and update flag in data when click on update button\n         */\n      updateEntry: function(name, email, index) {\n        this.name= name;\n        this.email= email;\n        this.updateIndex= index;\n        this.update= true;\n      },\n         /**\n         * Set the updated entry value into store,\n         * set the submitted flag and reset the form when form is validate.\n         */\n      updateEnttryValues () {\n        if(this.valid && this.name && this.email) {\n          this.preveousEntrys = cloneDeep(this.$store.state.entrys);\n          this.preveousEntrys[this.updateIndex].name= this.name;\n          this.preveousEntrys[this.updateIndex].email= this.email;\n          this.$store.dispatch('updateEnttrys', this.preveousEntrys);  \n          this.submitted= true;\n        }\n      },\n       /**\n         * Reset submitted flag, update flag, updateIndex, and preveousEntrys.\n         */\n      toggleSubmited: function () {\n        this.submitted= false;\n        this.update= false;\n        this.updateIndex= null;\n        this.preveousEntrys= [];\n      },\n      /**\n        * Reset form\n        */\n      clear (name) {\n        this.$refs[name][0].reset();\n      },\n    },\n  }\n\n</script>\n"]}]}