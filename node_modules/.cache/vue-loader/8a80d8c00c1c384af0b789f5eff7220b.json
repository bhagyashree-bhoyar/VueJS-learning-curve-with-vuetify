{"remainingRequest":"/home/bhagyashreebhoyer/small-curd-application-vuetify/VueJS-learning-curve-with-vuetify/node_modules/vue-loader/lib/index.js??vue-loader-options!/home/bhagyashreebhoyer/small-curd-application-vuetify/VueJS-learning-curve-with-vuetify/src/components/Update.vue?vue&type=script&lang=js&","dependencies":[{"path":"/home/bhagyashreebhoyer/small-curd-application-vuetify/VueJS-learning-curve-with-vuetify/src/components/Update.vue","mtime":1583332133684},{"path":"/home/bhagyashreebhoyer/small-curd-application-vuetify/VueJS-learning-curve-with-vuetify/node_modules/cache-loader/dist/cjs.js","mtime":1582811458839},{"path":"/home/bhagyashreebhoyer/small-curd-application-vuetify/VueJS-learning-curve-with-vuetify/node_modules/babel-loader/lib/index.js","mtime":1582811458975},{"path":"/home/bhagyashreebhoyer/small-curd-application-vuetify/VueJS-learning-curve-with-vuetify/node_modules/vuetify-loader/lib/loader.js","mtime":1582811484202},{"path":"/home/bhagyashreebhoyer/small-curd-application-vuetify/VueJS-learning-curve-with-vuetify/node_modules/cache-loader/dist/cjs.js","mtime":1582811458839},{"path":"/home/bhagyashreebhoyer/small-curd-application-vuetify/VueJS-learning-curve-with-vuetify/node_modules/vue-loader/lib/index.js","mtime":1582811476286}],"contextDependencies":[],"result":[{"type":"Buffer","data":"base64:Ly8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KCgovKiBlc2xpbnQtZGlzYWJsZSBuby11c2VsZXNzLWVzY2FwZSAqLwppbXBvcnQgY2xvbmVEZWVwIGZyb20gJ2xvZGFzaC9jbG9uZURlZXAnOwppbXBvcnQgRm9ybURlbW8gZnJvbSAnLi9Gb3JtRGVtby52dWUnOwogIApleHBvcnQgZGVmYXVsdCB7CiAgbmFtZTogJ0xpc3QnLAogIGRhdGE6ICgpID0+ICh7CiAgICBuYW1lOiAnJywKICAgIG5hbWVSdWxlczogWwogICAgdmFsdWUgPT4gISF2YWx1ZSB8fCAnTmFtZSBpcyByZXF1aXJlZCcsCiAgICB2YWx1ZSA9PiAodmFsdWUgJiYgdmFsdWUubGVuZ3RoIDw9IDIwKSB8fCAnTmFtZSBtdXN0IGJlIGxlc3MgdGhhbiAyMCBjaGFyYWN0ZXJzJywKICAgIHZhbHVlID0+IC9eW2EtekEtWlxzXC5dKyQvLnRlc3QodmFsdWUpIHx8ICdOYW1lIGNhbiBoYXZlIG9ubHkgY2hhcmFjdGVycycsCiAgXSwKICAgIGVtYWlsOiAnJywKICAgIGVtYWlsUnVsZXM6IFsKICAgIHZhbHVlID0+ICEhdmFsdWUgfHwgJ0UtbWFpbCBpcyByZXF1aXJlZCcsCiAgICB2YWx1ZSA9PiAvLitALitcLi4rLy50ZXN0KHZhbHVlKSB8fCAnRS1tYWlsIG11c3QgYmUgdmFsaWQnLAogIF0sCiAgICB2YWxpZDogdHJ1ZSwKICAgIHN1Ym1pdHRlZDogZmFsc2UsCiAgICB1cGRhdGU6IGZhbHNlLAogICAgdXBkYXRlSW5kZXg6IG51bGwsCiAgICBwcmV2ZW91c0VudHJ5czogW10sCiAgfSksCiAgY29tcG9uZW50czogewogICAgRm9ybURlbW8sCiAgfSwKICBjb21wdXRlZDogewogICAgLyoqCiAgICAgICogQ29tcHV0ZWQgdGhlIGVudHJ5cyBmb3Igc3RvcmUgCiAgICAgICogQHJldHVybnthcnJheX0gZW50cnlzCiAgICAgICovCiAgICBlbnRyeXMoKXsKICAgICAgcmV0dXJuIHRoaXMuJHN0b3JlLnN0YXRlLmVudHJ5cwogICAgfSwKICB9LAogIG1ldGhvZHM6IHsKICAgICAvKioKICAgICAgICogU2V0IHRoZSBlbnRyeSBmaWVsZCB2YWx1ZSwgaW5kZXggb2YgdXBkYXRlIGVudHJ5IGFuZCB1cGRhdGUgZmxhZyBpbiBkYXRhIHdoZW4gY2xpY2sgb24gdXBkYXRlIGJ1dHRvbgogICAgICAgKiBAcGFyYW17bmFtZX0gZm9ybSBzZWxlY3RlZCBlbnRyeSBuYW1lIHZhbHVlCiAgICAgICAqIEBwYXJhbXtlbWFpbH0gZm9ybSBzZWxlY3RlZCBlbnRyeSBlbWFpbCB2YWx1ZQogICAgICAgKiBAcGFyYW17aW5kZXh9IGZvcm0gc2VsZWN0ZWQgZW50cnkgaW5kZXggdmFsdWUKICAgICAgICovCiAgICB1cGRhdGVFbnRyeSAobmFtZSwgZW1haWwsIGluZGV4KSB7CiAgICAgIHRoaXMubmFtZT0gbmFtZTsKICAgICAgdGhpcy5lbWFpbD0gZW1haWw7CiAgICAgIHRoaXMudXBkYXRlSW5kZXg9IGluZGV4OwogICAgICB0aGlzLnVwZGF0ZT0gdHJ1ZTsKICAgICAgdGhpcy5zdWJtaXR0ZWQ9IGZhbHNlOwogICAgfSwKICAgICAgIC8qKgogICAgICAgKiBTZXQgdGhlIHVwZGF0ZWQgZW50cnkgdmFsdWUgaW50byBzdG9yZSwKICAgICAgICogc2V0IHRoZSBzdWJtaXR0ZWQgZmxhZyBhbmQgcmVzZXQgdGhlIGZvcm0gd2hlbiBmb3JtIGlzIHZhbGlkYXRlLgogICAgICAgKiBAcGFyYW17bmFtZX0gZm9ybSBuYW1lIGlucHV0IGZpZWxkIHZhbHVlCiAgICAgICAqIEBwYXJhbXtlbWFpbH0gZm9ybSBlbWFpbCBpbnB1dCBmaWVsZCB2YWx1ZQogICAgICAgKiBAcGFyYW17dmFsaWR9IGZvcm0gZGF0YSB2YWxpZGF0aW9uIGZsYWcKICAgICAgICovCiAgICB1cGRhdGVFbnR0cnlWYWx1ZXMgKG5hbWUsIGVtYWlsLCB2YWxpZCkgewogICAgICB0aGlzLm5hbWU9IG5hbWU7CiAgICAgIHRoaXMuZW1haWw9IGVtYWlsOwogICAgICB0aGlzLnZhbGlkPSB2YWxpZDsKICAgICAgaWYodGhpcy52YWxpZCAmJiB0aGlzLm5hbWUgJiYgdGhpcy5lbWFpbCkgewogICAgICAgIHRoaXMucHJldmVvdXNFbnRyeXMgPSBjbG9uZURlZXAodGhpcy4kc3RvcmUuc3RhdGUuZW50cnlzKTsKICAgICAgICB0aGlzLnByZXZlb3VzRW50cnlzW3RoaXMudXBkYXRlSW5kZXhdLm5hbWU9IHRoaXMubmFtZTsKICAgICAgICB0aGlzLnByZXZlb3VzRW50cnlzW3RoaXMudXBkYXRlSW5kZXhdLmVtYWlsPSB0aGlzLmVtYWlsOwogICAgICAgIHRoaXMuJHN0b3JlLmRpc3BhdGNoKCd1cGRhdGVFbnR0cnlzJywgdGhpcy5wcmV2ZW91c0VudHJ5cyk7ICAKICAgICAgICB0aGlzLnN1Ym1pdHRlZD0gdHJ1ZTsKICAgICAgfQogICAgfSwKICAgICAvKioKICAgICAgICogUmVzZXQgc3VibWl0dGVkIGZsYWcsIHVwZGF0ZSBmbGFnLCB1cGRhdGVJbmRleCwgYW5kIHByZXZlb3VzRW50cnlzLgogICAgICAgKi8KICAgIHRvZ2dsZVN1Ym1pdGVkICgpIHsKICAgICAgdGhpcy5zdWJtaXR0ZWQ9IGZhbHNlOwogICAgICB0aGlzLnVwZGF0ZT0gZmFsc2U7CiAgICAgIHRoaXMudXBkYXRlSW5kZXg9IG51bGw7CiAgICAgIHRoaXMucHJldmVvdXNFbnRyeXM9IFtdOwogICAgfSwKICAgIC8qKgogICAgICAqIFJlc2V0IGZvcm0KICAgICAgKiBAcGFyYW17ZnJvbVJlZnN9IGZvcm0gcmVmcwogICAgICAqLwogICAgY2xlYXIgKGZyb21SZWZzKSB7CiAgICAgIGZyb21SZWZzLmZvcm1zLnJlc2V0KCk7CiAgICAgIHRoaXMubmFtZT0gJyc7CiAgICAgIHRoaXMuZW1haWw9ICcnOwogICAgfSwKICB9LAp9Cgo="},{"version":3,"sources":["Update.vue"],"names":[],"mappings":";;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;AAkFA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA","file":"Update.vue","sourceRoot":"src/components","sourcesContent":["<template>\n  <v-card>\n    <v-list flat  id=\"entry-list\">\n      <v-subheader class=\"sub-header\">\n        Update\n      </v-subheader>\n      <v-list-item-group\n        color=\"primary\"\n        class=\"list\"\n      >\n        <v-list-item\n          class=\"list-item\"\n          v-for=\"(entry, index) in entrys\"\n          :key=\"index\"\n        >\n          <div class=\"items-wrapper\" v-if=\"!(updateIndex == index)\">\n            <v-list-item-icon>\n              <v-btn\n                title=\"Update\"\n                min-width=\"20px\"\n                width=\"20px\"\n                height=\"25px\"\n                color=\"success\"\n                @click=\"updateEntry(entry.name, entry.email, index)\"\n              >\n                <v-icon>\n                  mdi-account-circle\n                </v-icon>\n              </v-btn>  \n            </v-list-item-icon>\n            <v-list-item-content>\n              <v-list-item-title>\n                Name: {{ entry.name }},  Email: {{ entry.email }}\n              </v-list-item-title>\n            </v-list-item-content>\n          </div>\n          <div v-if=\"update && (updateIndex == index)\">\n            <FormDemo\n             :name=name\n             :valid=valid\n             FormRef=\"forms\"\n             :submitted=submitted\n             :submit=\"updateEnttryValues\"\n             :nameRules=nameRules\n             :counter=\"20\"\n             :nameRequired=\"true\"\n             :email=email\n             :emailRequired=\"true\"\n             :emailRules=emailRules\n             :clear=\"clear\"\n            />\n            \n            <v-alert\n              v-model=\"submitted\"\n              dense\n              text\n              icon=\"mdi-check\"\n              type=\"success\"\n              elevation=\"2\"\n            >\n              Added entry successfully!\n              <v-btn\n                min-width=\"20px\"\n                color=\"success\"\n                width=\"20px\"\n                height=\"25px\"\n                v-on:click=\"toggleSubmited\"\n              >\n                <v-icon >\n                  mdi-close-circle\n                </v-icon>\n              </v-btn>\n            </v-alert>\n          </div>\n        </v-list-item>\n      </v-list-item-group>\n    </v-list>\n  </v-card>\n</template>\n\n<script>\n\n  /* eslint-disable no-useless-escape */\n  import cloneDeep from 'lodash/cloneDeep';\n  import FormDemo from './FormDemo.vue';\n    \n  export default {\n    name: 'List',\n    data: () => ({\n      name: '',\n      nameRules: [\n      value => !!value || 'Name is required',\n      value => (value && value.length <= 20) || 'Name must be less than 20 characters',\n      value => /^[a-zA-Z\\s\\.]+$/.test(value) || 'Name can have only characters',\n    ],\n      email: '',\n      emailRules: [\n      value => !!value || 'E-mail is required',\n      value => /.+@.+\\..+/.test(value) || 'E-mail must be valid',\n    ],\n      valid: true,\n      submitted: false,\n      update: false,\n      updateIndex: null,\n      preveousEntrys: [],\n    }),\n    components: {\n      FormDemo,\n    },\n    computed: {\n      /**\n        * Computed the entrys for store \n        * @return{array} entrys\n        */\n      entrys(){\n        return this.$store.state.entrys\n      },\n    },\n    methods: {\n       /**\n         * Set the entry field value, index of update entry and update flag in data when click on update button\n         * @param{name} form selected entry name value\n         * @param{email} form selected entry email value\n         * @param{index} form selected entry index value\n         */\n      updateEntry (name, email, index) {\n        this.name= name;\n        this.email= email;\n        this.updateIndex= index;\n        this.update= true;\n        this.submitted= false;\n      },\n         /**\n         * Set the updated entry value into store,\n         * set the submitted flag and reset the form when form is validate.\n         * @param{name} form name input field value\n         * @param{email} form email input field value\n         * @param{valid} form data validation flag\n         */\n      updateEnttryValues (name, email, valid) {\n        this.name= name;\n        this.email= email;\n        this.valid= valid;\n        if(this.valid && this.name && this.email) {\n          this.preveousEntrys = cloneDeep(this.$store.state.entrys);\n          this.preveousEntrys[this.updateIndex].name= this.name;\n          this.preveousEntrys[this.updateIndex].email= this.email;\n          this.$store.dispatch('updateEnttrys', this.preveousEntrys);  \n          this.submitted= true;\n        }\n      },\n       /**\n         * Reset submitted flag, update flag, updateIndex, and preveousEntrys.\n         */\n      toggleSubmited () {\n        this.submitted= false;\n        this.update= false;\n        this.updateIndex= null;\n        this.preveousEntrys= [];\n      },\n      /**\n        * Reset form\n        * @param{fromRefs} form refs\n        */\n      clear (fromRefs) {\n        fromRefs.forms.reset();\n        this.name= '';\n        this.email= '';\n      },\n    },\n  }\n\n</script>\n\n"]}]}